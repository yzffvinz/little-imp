{"version":3,"sources":["assets/scripts/Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","action","startMove","console","log","setJumpAction","addMoveListener","stopMove","removeJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","node","runAction","stopAction","audioEngine","playEffect","onLoad","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","removeMoveListener","off","event","keyCode","macro","KEY","a","d","onDestroy","start","update","dt","Math","abs","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n        action: null,\n    },\n\n    startMove () {\n        console.log('start');\n        this.setJumpAction();\n        this.addMoveListener();\n    },\n\n    stopMove () {\n        console.log('stop');\n        this.removeJumpAction();\n        this.removeJumpAction();\n    },\n\n    setJumpAction: function () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复\n        this.action = cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n        console.log(this.action);\n        this.node.runAction(this.action);\n    },\n\n    removeJumpAction: function () {\n        this.action && this.node.stopAction(this.action);\n        this.action = null;\n    },\n\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // 加速度方向开关dddddd\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n        // \n        this.jumpHeight = 0;\n    },\n\n    addMoveListener() {\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    removeMoveListener() {\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyDown (event) {\n        switch (event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n\n    onDestroy () {\n        this.removeMoveListener();\n    },\n\n    start () {\n\n    },\n\n    update (dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n});\n"]}